"""
This type stub file was generated by pyright.
"""

from typing import Any, NamedTuple, Optional

"""Models for messages exchanged with the bridge."""
class ResponseStatus:
    """A response status split into its code and message parts."""
    def __init__(self, code: Optional[int], message: str) -> None:
        """Create a new ResponseStatus."""
        ...
    
    @classmethod
    def from_str(cls, data: str) -> ResponseStatus:
        """Convert a str to a ResponseStatus."""
        ...
    
    def is_successful(self) -> bool:
        """Check if the status code is in the range [200, 300)."""
        ...
    
    def __repr__(self) -> str:
        """Get a string representation of the ResponseStatus."""
        ...
    
    def __str__(self) -> str:
        """Format the response status as a string in the LEAP header format."""
        ...
    
    def __eq__(self, other: ResponseStatus) -> bool:
        """Check if this ResponseStatus is equal to another ResponseStatus."""
        ...
    


class ResponseHeader(NamedTuple):
    """A LEAP response header."""
    StatusCode: Optional[ResponseStatus] = ...
    Url: Optional[str] = ...
    MessageBodyType: Optional[str] = ...
    @classmethod
    def from_json(cls, data: dict[Any, Any]) -> ResponseHeader:
        """Convert a JSON dictionary to a ResponseHeader."""
        ...
    


class Response(NamedTuple):
    """A LEAP response."""
    Header: ResponseHeader
    CommuniqueType: Optional[str] = ...
    Body: Optional[dict[Any, Any]] = ...
    @classmethod
    def from_json(cls, data: dict[Any, Any]) -> Response:
        """Convert a JSON dictionary to a Response."""
        ...
    
